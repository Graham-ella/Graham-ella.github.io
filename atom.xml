<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Graham</title>
  
  
  <link href="https://graham-ella.github.io/atom.xml" rel="self"/>
  
  <link href="https://graham-ella.github.io/"/>
  <updated>2022-05-13T13:56:25.901Z</updated>
  <id>https://graham-ella.github.io/</id>
  
  <author>
    <name>Graham</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2022-05-13</title>
    <link href="https://graham-ella.github.io/2022/05/13/%E6%AF%8F%E6%97%A5%E4%B8%80%E6%B0%B4/2022-05-13/"/>
    <id>https://graham-ella.github.io/2022/05/13/%E6%AF%8F%E6%97%A5%E4%B8%80%E6%B0%B4/2022-05-13/</id>
    <published>2022-05-13T08:00:00.000Z</published>
    <updated>2022-05-13T13:56:25.901Z</updated>
    
    <content type="html"><![CDATA[<h2 id="早上"><a href="#早上" class="headerlink" title="早上"></a>早上</h2><p>今天起得巨早，8点就醒了，起来随便塞了点东西吃吃就去看编译原理了，这课简直绝了，真的感觉要挂科），看到语法制导翻译了，<br>感觉要来不及看了）— 唉</p><h2 id="下午"><a href="#下午" class="headerlink" title="下午"></a>下午</h2><p>下午 emmmm 看了会甘辉城乐园，京阿尼的画风还是很好看的呀，然后就到了亲爱的源老师课堂，哈哈，写个板书他竟然卡壳了，笑死我了，<br>建议下次还是老老实实念PPT吧，啊这，原来课结束了，没有下次了，好哎！！！！！</p><h2 id="晚上"><a href="#晚上" class="headerlink" title="晚上"></a>晚上</h2><p>翘掉了实验课去打了会儿球，平板和充电器都先放回宿舍了，只能在自习室歇会儿，补补之前没写的博客了）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;早上&quot;&gt;&lt;a href=&quot;#早上&quot; class=&quot;headerlink&quot; title=&quot;早上&quot;&gt;&lt;/a&gt;早上&lt;/h2&gt;&lt;p&gt;今天起得巨早，8点就醒了，起来随便塞了点东西吃吃就去看编译原理了，这课简直绝了，真的感觉要挂科），看到语法制导翻译了，&lt;br&gt;感觉要来不及看</summary>
      
    
    
    
    <category term="每日一水" scheme="https://graham-ella.github.io/categories/%E6%AF%8F%E6%97%A5%E4%B8%80%E6%B0%B4/"/>
    
    
    <category term="日记" scheme="https://graham-ella.github.io/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>招商银行笔试</title>
    <link href="https://graham-ella.github.io/2022/05/13/2022%E6%9A%91%E6%9C%9F%E7%AC%94%E8%AF%95/%E6%8B%9B%E5%95%86%E9%93%B6%E8%A1%8C%E7%AC%94%E8%AF%95/"/>
    <id>https://graham-ella.github.io/2022/05/13/2022%E6%9A%91%E6%9C%9F%E7%AC%94%E8%AF%95/%E6%8B%9B%E5%95%86%E9%93%B6%E8%A1%8C%E7%AC%94%E8%AF%95/</id>
    <published>2022-05-13T08:00:00.000Z</published>
    <updated>2022-05-13T15:03:25.339Z</updated>
    
    <content type="html"><![CDATA[<h2 id="选择题"><a href="#选择题" class="headerlink" title="选择题"></a>选择题</h2><p><img src="https://cdn.jsdelivr.net/gh/Graham-ella/picgo/img/20220513220918.png" alt="树的节点"></p><h3 id="rm指令"><a href="#rm指令" class="headerlink" title="rm指令"></a>rm指令</h3><ul><li>rm -i 删除前逐一询问确认</li><li>rm -f 即使原档案属性设为唯读，亦直接删除，无需逐一确认</li><li>rm -r 将目录及以下之档案亦逐一删除<br>(好像没有题目中的 rm -d选项)</li></ul><h3 id="数据库的隔离性"><a href="#数据库的隔离性" class="headerlink" title="数据库的隔离性"></a>数据库的隔离性</h3><p>并发访问数据库时，一个用户的事务不被其它事务所干扰，各并发事务之间数据库是独立的<br>（原子性和持久性都是基于单个事务内部的措施，而隔离性是多个事务之间相互隔离、互不影响的特性）</p><p>事务的四个隔离级别：</p><ol><li>READ-UNCOMMITTED(读未提交)<br> 最低的隔离级别，允许读取尚未提交的数据变更，可能会导致脏读、幻读或不可重复读</li><li>READ-COMMITTED(读已提交)<br> 允许读取并发事务已经提交的数据，可以阻止脏读，但是幻读和不可重复读仍有可能发生</li><li>REPEATABLE-READ(可重复读)<br> 对同一字段的多次读取结果都是一致的，除非数据是被本身事务自己所修改，可以阻止脏读和不可重复读，但是幻读仍有可能发生</li><li>SERIALIZABLE(可串行化)<br> 最高的隔离级别，完全服从ACID的隔离级别。所有的事务依次逐个执行，这样事务之间就完全不可能产生干扰，该级别可以防止脏读、不可重复读以及幻读。</li></ol><p>Mysql 默认采用的 <b>可重复读隔离级别</b> ，Oracle 默认采用的<b>读已提交隔离级别</b><br>InnoDB 存储引擎在 分布式事务 的情况下一般会用到可串行化隔离级别。</p><h3 id="范数"><a href="#范数" class="headerlink" title="范数"></a>范数</h3><p><img src="https://cdn.jsdelivr.net/gh/Graham-ella/picgo/img/20220513230019.png" alt="L0、L1、L2范数"></p><h3 id="xss类型"><a href="#xss类型" class="headerlink" title="xss类型"></a>xss类型</h3><ul><li>反射型XSS</li><li>DOM-based型XXS</li><li>存储型XSS（持久型XSS）</li></ul><p>反射型 XSS 一般是攻击者通过特定手法（如电子邮件），诱使用户去访问一个包含恶意代码的 URL，当受害者点击这些专门设计的链接的时候，恶意代码会直接在受害者主机上的浏览器执行。反射型XSS通常出现在网站的搜索栏、用户登录口等地方，常用来窃取客户端 Cookies 或进行钓鱼欺骗。</p><p>久型XSS，主要将XSS代码提交存储在服务器端（数据库，内存，文件系统等），下次请求目标页面时不用再提交XSS代码。当目标用户访问该页面获取数据时，XSS代码会从服务器解析之后加载出来，返回到浏览器做正常的HTML和JS解析执行，XSS攻击就发生了。存储型 XSS 一般出现在网站留言、评论、博客日志等交互处，恶意脚本存储到客户端或者服务端的数据库中。</p><p>基于 DOM 的 XSS 攻击是指通过恶意脚本修改页面的 DOM 结构，是纯粹发生在客户端的攻击。DOM 型 XSS 攻击中，取出和执行恶意代码由浏览器端完成，属于前端 JavaScript 自身的安全漏洞。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;选择题&quot;&gt;&lt;a href=&quot;#选择题&quot; class=&quot;headerlink&quot; title=&quot;选择题&quot;&gt;&lt;/a&gt;选择题&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/Graham-ella/picgo/img/202205</summary>
      
    
    
    
    <category term="笔试" scheme="https://graham-ella.github.io/categories/%E7%AC%94%E8%AF%95/"/>
    
    
    <category term="暑期实习 笔试" scheme="https://graham-ella.github.io/tags/%E6%9A%91%E6%9C%9F%E5%AE%9E%E4%B9%A0-%E7%AC%94%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>2022-05-12</title>
    <link href="https://graham-ella.github.io/2022/05/12/%E6%AF%8F%E6%97%A5%E4%B8%80%E6%B0%B4/2022-05-12/"/>
    <id>https://graham-ella.github.io/2022/05/12/%E6%AF%8F%E6%97%A5%E4%B8%80%E6%B0%B4/2022-05-12/</id>
    <published>2022-05-12T08:00:00.000Z</published>
    <updated>2022-05-13T13:54:11.849Z</updated>
    
    <content type="html"><![CDATA[<p>昨天没写 今天13号补上）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;昨天没写 今天13号补上）&lt;/p&gt;
</summary>
      
    
    
    
    <category term="每日一水" scheme="https://graham-ella.github.io/categories/%E6%AF%8F%E6%97%A5%E4%B8%80%E6%B0%B4/"/>
    
    
    <category term="日记" scheme="https://graham-ella.github.io/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>4399和招商银行</title>
    <link href="https://graham-ella.github.io/2022/05/11/2022%E6%9A%91%E6%9C%9F%E9%9D%A2%E8%AF%95/4399%E5%92%8C%E6%8B%9B%E5%95%86%E9%93%B6%E8%A1%8C/"/>
    <id>https://graham-ella.github.io/2022/05/11/2022%E6%9A%91%E6%9C%9F%E9%9D%A2%E8%AF%95/4399%E5%92%8C%E6%8B%9B%E5%95%86%E9%93%B6%E8%A1%8C/</id>
    <published>2022-05-11T08:00:00.000Z</published>
    <updated>2022-05-11T11:57:04.667Z</updated>
    
    <content type="html"><![CDATA[<h2 id="4399面试"><a href="#4399面试" class="headerlink" title="4399面试"></a>4399面试</h2><p>介绍一下你自己–</p><p>介绍一下自己的项目</p><p>又又又选择了说自己的CSAPP实验　这门课真是学的绝了</p><p>大小端判断、浮点数的存储— 没反应</p><p>动态内存分配器 问了问分配内存时候 最佳匹配和第一次匹配（还是啥）的优点和缺点<br>大概说了说最佳匹配性能弱点，第一次匹配可能会导致内存碎片之类的</p><p>提到 拆炸弹的Lab 提到一嘴反汇编 问了问ELF格式的文件结构<br>说了说 文件头、data段、text段、rodata段、bss段、注释段、堆栈信息段之类的<br>问了问常量字符串在哪个段？(rodata) 未初始化的全局变量或者静态变量在哪里（data、bss段之类的）</p><p>问了问http代理服务器那个项目<br>说了句一个进程在跑，如果遇到一个请求，就直接开个线程去处理（精准踩雷）</p><p>问了问 线程A打开一个文件，线程B可以再打开吗（当然可以）<br>如果已知地址，线程A可以访问B的栈吗？（可以的吧　不确定）<br>线程的空间资源主要用在哪里？（线程id、栈、程序计数器之类的）</p><p>然后问我是否知道IO多路复用之类的？<br>回答了select的东西（不敢回答 epoll poll 怕直接被问爆）</p><p>面试内容大概就问了这么多》》 感觉效果还可以 不知道能不能过？</p><p>然后就是问了问为啥投游戏公司、问啥不考研、平时的学习方法啥的——</p><p>反问：面试官主要做的啥方面</p><h2 id="招商银行"><a href="#招商银行" class="headerlink" title="招商银行"></a>招商银行</h2><p>直接一个大写的寄</p><p>为啥我投的服务器开发，问的都是些Java的东西 人直接麻了</p><p>不过问的倒是挺简单的，可惜完全没准备过</p><p>自我介绍提到Java 直接开始问爆</p><p>让我介绍下自己写的Java项目 说了商品管理系统）我直接人麻了</p><p>问我遇到了什么问题）我一个小小前后端能有啥问题<br>只能胡扯说遇到了同步异步的问题，好家伙直接问我怎么解决的，支支吾吾说在前端定义了两个函数的前后关系，<br>让它从异步转同步，然后又继续追问怎么转的？？ 我直接好家伙 只能说用什么async 还是 sync什么关键字（不了解）搞的<br>对面竟然点了点头 貌似他也用过？</p><p>然后得知了我用过spring boot 直接问我Controller层用了什么注解？ 寄啦 我咋记得代码嘛—</p><p>当场尴尬– 感觉这个面试官被我搞懵了（ps:有两个面试官）</p><p>然后问我熟不熟悉linux 我直接好家伙 直呼知道常用指令</p><p>问我查看CPU使用情况用啥情况？ 好家伙完全不会 只记得好像top可以 顺嘴提了 ps aux<br>结果直接问我ps aux输出啥 回答忘了（艹 不该胡乱说话）</p><p>网上搜了搜 貌似可能是想让我回答 vmstat<br><img src="https://cdn.jsdelivr.net/gh/Graham-ella/picgo/img/20220511194618.png" alt="linux查看CPU使用"></p><p>后来提到我的项目是跑在本地还是哪儿？</p><p>想起以前大一搞过部署到云服务器，结果问我jar包怎么打包出来的？</p><p>我直呼 idea直接点出来的 又问我哪里点的？ 我怎么可能记得 ） 大寄</p><p>然后问我jar包怎么传到服务器 有没有种可能想让我回答 scp指令 结果我回答直接拖拽 艹 乐死我了</p><p>直接xftp传</p><p>这把可真是尴尬爆表，这个面试官可能意识到了我有多垃圾，所以选择了沉默，另一个面试官上了）</p><p>问了手：“你说你熟悉计算机网络，谈谈序列号的作用”</p><p>好家伙，我直呼序列号可以帮你确认分组，确认ack发什么？ 他好像说我说了大半） 并不了解还让我说啥<br>序列号难道不就是数据包最初始数据的那个号码嘛）</p><p>中途倒是谈到了ICMP协议，稍微吹了会儿水 感觉发挥可以</p><p>感觉这把招商银行是面的凉了，本来还想去的呢） </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;4399面试&quot;&gt;&lt;a href=&quot;#4399面试&quot; class=&quot;headerlink&quot; title=&quot;4399面试&quot;&gt;&lt;/a&gt;4399面试&lt;/h2&gt;&lt;p&gt;介绍一下你自己–&lt;/p&gt;
&lt;p&gt;介绍一下自己的项目&lt;/p&gt;
&lt;p&gt;又又又选择了说自己的CSAPP实验　这门课</summary>
      
    
    
    
    <category term="面试" scheme="https://graham-ella.github.io/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
    <category term="暑期实习 面试" scheme="https://graham-ella.github.io/tags/%E6%9A%91%E6%9C%9F%E5%AE%9E%E4%B9%A0-%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>2022-05-11</title>
    <link href="https://graham-ella.github.io/2022/05/11/%E6%AF%8F%E6%97%A5%E4%B8%80%E6%B0%B4/2022-05-11/"/>
    <id>https://graham-ella.github.io/2022/05/11/%E6%AF%8F%E6%97%A5%E4%B8%80%E6%B0%B4/2022-05-11/</id>
    <published>2022-05-11T08:00:00.000Z</published>
    <updated>2022-05-11T11:00:42.645Z</updated>
    
    <content type="html"><![CDATA[<h2 id="早上"><a href="#早上" class="headerlink" title="早上"></a>早上</h2><p>8:30左右醒来，昨晚三点多才睡（热爆了），半夜下床找风扇结果还没找着，又灰溜溜的回床睡了，貌似是时间已经够晚了，<br>后来也成功入睡了</p><p>可怕）想起了去年暑假的悲惨时光</p><p>早上看了会儿？emmmm 好家伙 好像早上没看啥 看了会儿C++的东西 然后睡了会儿 实在太困了</p><h2 id="下午"><a href="#下午" class="headerlink" title="下午"></a>下午</h2><p>和架构师请了个假，毕竟下午有4399的面试</p><p>感觉4399的面试 emmmm 发挥还算可以的样子 应该不会被挂吧） 唉</p><p>面完了4：20左右，结果接到电话？ 招商银行的电话？？？ —- 发现自己记错面试时间了</p><p>5：30 粗略的面完了招商银行 唉） 感觉特定挂了 问了好多Java的东西 我直接人麻了</p><p>问了不少 springboot的 东西 直接废了</p><h2 id="晚上"><a href="#晚上" class="headerlink" title="晚上"></a>晚上</h2><p>先写个博客</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;早上&quot;&gt;&lt;a href=&quot;#早上&quot; class=&quot;headerlink&quot; title=&quot;早上&quot;&gt;&lt;/a&gt;早上&lt;/h2&gt;&lt;p&gt;8:30左右醒来，昨晚三点多才睡（热爆了），半夜下床找风扇结果还没找着，又灰溜溜的回床睡了，貌似是时间已经够晚了，&lt;br&gt;后来也成功入睡了&lt;</summary>
      
    
    
    
    <category term="每日一水" scheme="https://graham-ella.github.io/categories/%E6%AF%8F%E6%97%A5%E4%B8%80%E6%B0%B4/"/>
    
    
    <category term="日记" scheme="https://graham-ella.github.io/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>2022-05-10</title>
    <link href="https://graham-ella.github.io/2022/05/10/%E6%AF%8F%E6%97%A5%E4%B8%80%E6%B0%B4/2022-05-10/"/>
    <id>https://graham-ella.github.io/2022/05/10/%E6%AF%8F%E6%97%A5%E4%B8%80%E6%B0%B4/2022-05-10/</id>
    <published>2022-05-10T08:00:00.000Z</published>
    <updated>2022-05-10T15:00:47.568Z</updated>
    
    <content type="html"><![CDATA[<h2 id="早上"><a href="#早上" class="headerlink" title="早上"></a>早上</h2><p>一觉醒来8点半，吃了个早饭，9电多到了诚意，奴了把上周末的周赛，写到了10：50，准备水个博客</p><p>是不是该学编译原理了？</p><p>想到下午某源的课我就头疼，摊上这种老师真是倒了血霉了</p><h2 id="下午"><a href="#下午" class="headerlink" title="下午"></a>下午</h2><p>看了会儿编译原理，终于看到P21了，还有3&#x2F;4没看，是不是要无了？<br>LL(1)文法感觉有点妙啊<br>这个什么FIRST集和FOLLOW集感觉有点不太熟练）还是摸的多了</p><h2 id="晚上"><a href="#晚上" class="headerlink" title="晚上"></a>晚上</h2><p>打了会儿球到9电多，投了两家公司的建立，在牛客网上又骚扰了几家公司<br>所以什么时候会开奖呢？<br>求华为和海康爆捞我</p><p>华泰啥时候能出一面结果啊）难受啊~~~~~~~~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;早上&quot;&gt;&lt;a href=&quot;#早上&quot; class=&quot;headerlink&quot; title=&quot;早上&quot;&gt;&lt;/a&gt;早上&lt;/h2&gt;&lt;p&gt;一觉醒来8点半，吃了个早饭，9电多到了诚意，奴了把上周末的周赛，写到了10：50，准备水个博客&lt;/p&gt;
&lt;p&gt;是不是该学编译原理了？&lt;/p&gt;</summary>
      
    
    
    
    <category term="每日一水" scheme="https://graham-ella.github.io/categories/%E6%AF%8F%E6%97%A5%E4%B8%80%E6%B0%B4/"/>
    
    
    <category term="日记" scheme="https://graham-ella.github.io/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>leetcode第292场周赛</title>
    <link href="https://graham-ella.github.io/2022/05/10/leetcode%E5%91%A8%E8%B5%9B/leetcode%E7%AC%AC292%E5%9C%BA%E5%91%A8%E8%B5%9B/"/>
    <id>https://graham-ella.github.io/2022/05/10/leetcode%E5%91%A8%E8%B5%9B/leetcode%E7%AC%AC292%E5%9C%BA%E5%91%A8%E8%B5%9B/</id>
    <published>2022-05-10T08:00:00.000Z</published>
    <updated>2022-05-10T14:58:39.848Z</updated>
    
    <content type="html"><![CDATA[<h2 id="lc2264-字符串中最大的-3-位相同数字"><a href="#lc2264-字符串中最大的-3-位相同数字" class="headerlink" title="lc2264. 字符串中最大的 3 位相同数字"></a><a href="https://leetcode.cn/problems/largest-3-same-digit-number-in-string/">lc2264. 字符串中最大的 3 位相同数字</a></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">largestGoodInteger</span><span class="params">(string num)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> len = num.<span class="built_in">size</span>();</span><br><span class="line">        string res = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i + <span class="number">2</span> &lt; len; i++)&#123;</span><br><span class="line">            <span class="comment">// 长度为3的子字符串相等</span></span><br><span class="line">            <span class="keyword">if</span>(num[i] == num[i+<span class="number">1</span>] &amp;&amp; num[i] == num[i+<span class="number">2</span>])&#123;</span><br><span class="line">                string ss = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                ss = ss + num[i] + num[i+<span class="number">1</span>] + num[i+<span class="number">2</span>];</span><br><span class="line">                res = <span class="built_in">max</span>(res, ss);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;      </span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="lc2265-统计值等于子树平均值的节点数"><a href="#lc2265-统计值等于子树平均值的节点数" class="headerlink" title="lc2265. 统计值等于子树平均值的节点数"></a><a href="https://leetcode.cn/problems/count-nodes-equal-to-average-of-subtree/">lc2265. 统计值等于子树平均值的节点数</a></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * struct TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode *left;</span></span><br><span class="line"><span class="comment"> *     TreeNode *right;</span></span><br><span class="line"><span class="comment"> *     TreeNode() : val(0), left(nullptr), right(nullptr) &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; <span class="title">dfs</span><span class="params">(TreeNode* root)</span></span>&#123;</span><br><span class="line">        <span class="type">int</span> num = <span class="number">1</span>, sum = root-&gt;val;</span><br><span class="line">        <span class="keyword">if</span>(root-&gt;left)&#123;</span><br><span class="line">            <span class="keyword">auto</span> z = <span class="built_in">dfs</span>(root-&gt;left);</span><br><span class="line">            num += z.first;</span><br><span class="line">            sum += z.second;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(root-&gt;right)&#123;</span><br><span class="line">            <span class="keyword">auto</span> z = <span class="built_in">dfs</span>(root-&gt;right);</span><br><span class="line">            num += z.first;</span><br><span class="line">            sum += z.second;    </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(sum/num == root-&gt;val)&#123;</span><br><span class="line">            res++;</span><br><span class="line">            <span class="comment">// cout &lt;&lt; root-&gt;val &lt;&lt; &quot; &quot; &lt;&lt; num &lt;&lt; &quot; &quot; &lt;&lt; sum &lt;&lt; endl;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> &#123;num, sum&#125;;</span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">averageOfSubtree</span><span class="params">(TreeNode* root)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">dfs</span>(root);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="lc2266-统计打字方案数"><a href="#lc2266-统计打字方案数" class="headerlink" title="lc2266. 统计打字方案数"></a><a href="https://leetcode.cn/problems/count-number-of-texts/">lc2266. 统计打字方案数</a></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="type">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line">    <span class="type">int</span> f[<span class="number">100001</span>];</span><br><span class="line">    <span class="type">int</span> v[<span class="number">100001</span>];</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">countTexts</span><span class="params">(string s)</span> </span>&#123;</span><br><span class="line">        f[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">100000</span>; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = i + <span class="number">1</span>; j &lt;= i + <span class="number">3</span> &amp;&amp; j &lt;= <span class="number">100000</span>; j++)&#123;</span><br><span class="line">                f[j] += f[i];</span><br><span class="line">                f[j] %= mod;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        v[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">100000</span>; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = i + <span class="number">1</span>; j &lt;= i + <span class="number">4</span> &amp;&amp; j &lt;= <span class="number">100000</span>; j++)&#123;</span><br><span class="line">                v[j] += v[i];</span><br><span class="line">                v[j] %= mod;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> len = s.<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> res = <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> tempLen = <span class="number">1</span>, tempNum = s[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt; len; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i] == tempNum)&#123;</span><br><span class="line">                tempLen++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(tempNum == <span class="string">&#x27;7&#x27;</span> || tempNum == <span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">                    res *= v[tempLen];</span><br><span class="line">                    res %= mod;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    res *= f[tempLen];</span><br><span class="line">                    res %= mod;</span><br><span class="line">                &#125;</span><br><span class="line">                tempLen = <span class="number">1</span>;</span><br><span class="line">                tempNum = s[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 最后还有一段没有算上</span></span><br><span class="line">        <span class="keyword">if</span>(tempNum == <span class="string">&#x27;7&#x27;</span> || tempNum == <span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">            res *= v[tempLen];</span><br><span class="line">            res %= mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            res *= f[tempLen];</span><br><span class="line">            res %= mod;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="lc2267-检查是否有合法括号字符串路径"><a href="#lc2267-检查是否有合法括号字符串路径" class="headerlink" title="lc2267. 检查是否有合法括号字符串路径"></a><a href="https://leetcode.cn/problems/check-if-there-is-a-valid-parentheses-string-path/">lc2267. 检查是否有合法括号字符串路径</a></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// dp[i][j][k] 表示 是否能合法到达 (i, j) 位置 且此时左括号 - 右括号数量为k </span></span><br><span class="line">    <span class="type">bool</span> dp[<span class="number">100</span>][<span class="number">100</span>][<span class="number">200</span>];</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">hasValidPath</span><span class="params">(vector&lt;vector&lt;<span class="type">char</span>&gt;&gt;&amp; grid)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> m = grid.<span class="built_in">size</span>(), n = grid[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(grid[<span class="number">0</span>][<span class="number">0</span>] == <span class="string">&#x27;(&#x27;</span>)&#123;</span><br><span class="line">            dp[<span class="number">0</span>][<span class="number">0</span>][<span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)&#123;</span><br><span class="line">                <span class="comment">// 看看此时 k 的情况 k最多是0-199</span></span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">0</span>; k &lt; <span class="number">200</span>; k++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(dp[i][j][k])&#123;</span><br><span class="line">                        <span class="comment">// 向下走</span></span><br><span class="line">                        <span class="keyword">if</span>(i + <span class="number">1</span> &lt; m)&#123;</span><br><span class="line">                            <span class="type">int</span> l = k;</span><br><span class="line">                            <span class="keyword">if</span>(grid[i + <span class="number">1</span>][j] == <span class="string">&#x27;(&#x27;</span>) l++;</span><br><span class="line">                            <span class="keyword">else</span> l--;</span><br><span class="line">                            <span class="keyword">if</span>(l &gt;= <span class="number">0</span>) dp[i+<span class="number">1</span>][j][l] = <span class="literal">true</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="comment">// 向右走</span></span><br><span class="line">                        <span class="keyword">if</span>(j + <span class="number">1</span> &lt; n)&#123;</span><br><span class="line">                            <span class="type">int</span> l = k;</span><br><span class="line">                            <span class="keyword">if</span>(grid[i][j + <span class="number">1</span>] == <span class="string">&#x27;(&#x27;</span>) l++;</span><br><span class="line">                            <span class="keyword">else</span> l--;</span><br><span class="line">                            <span class="keyword">if</span>(l &gt;= <span class="number">0</span>) dp[i][j + <span class="number">1</span>][l] = <span class="literal">true</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[m<span class="number">-1</span>][n<span class="number">-1</span>][<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;lc2264-字符串中最大的-3-位相同数字&quot;&gt;&lt;a href=&quot;#lc2264-字符串中最大的-3-位相同数字&quot; class=&quot;headerlink&quot; title=&quot;lc2264. 字符串中最大的 3 位相同数字&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://le</summary>
      
    
    
    
    <category term="leetcode周赛" scheme="https://graham-ella.github.io/categories/leetcode%E5%91%A8%E8%B5%9B/"/>
    
    
    <category term="lc周赛" scheme="https://graham-ella.github.io/tags/lc%E5%91%A8%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title>2022-05-09</title>
    <link href="https://graham-ella.github.io/2022/05/09/%E6%AF%8F%E6%97%A5%E4%B8%80%E6%B0%B4/2022-05-09-md/"/>
    <id>https://graham-ella.github.io/2022/05/09/%E6%AF%8F%E6%97%A5%E4%B8%80%E6%B0%B4/2022-05-09-md/</id>
    <published>2022-05-09T15:17:46.000Z</published>
    <updated>2022-05-10T15:00:45.895Z</updated>
    
    <content type="html"><![CDATA[<h2 id="早上"><a href="#早上" class="headerlink" title="早上"></a>早上</h2><p>又是个平凡的早晨，早上一睁眼就9点多了，胡乱吃了点早饭，滚回诚意后又又又摸了会小鱼，<br>看了会4月新番，表示周一更新的番剧还是太少了</p><p>云了会butterfly的配置</p><h2 id="中午"><a href="#中午" class="headerlink" title="中午"></a>中午</h2><p>吃到了美味的锅包肉</p><h2 id="下午"><a href="#下午" class="headerlink" title="下午"></a>下午</h2><p>上了架构师的课，评价是一个字没听，在听CY老师的编译原理，评价是一般，都在讲些DFA，NFA的东西，<br>有没有种可能是我还没看到新内容？</p><p>看了会butterfly的主题配置，配好了搜索，优化了主页，配好了加载动画等等</p><h2 id="晚上"><a href="#晚上" class="headerlink" title="晚上"></a>晚上</h2><p>小程序比赛的开发终于有了点效果，话说这个vant weapp的开发文档还能再简略点吗？<br>本来以为小程序开发的资料挺多的，一搜全是卖课的—-<br>基础不牢，地动山摇</p><p>一天的评价是：<b>寄</b></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;早上&quot;&gt;&lt;a href=&quot;#早上&quot; class=&quot;headerlink&quot; title=&quot;早上&quot;&gt;&lt;/a&gt;早上&lt;/h2&gt;&lt;p&gt;又是个平凡的早晨，早上一睁眼就9点多了，胡乱吃了点早饭，滚回诚意后又又又摸了会小鱼，&lt;br&gt;看了会4月新番，表示周一更新的番剧还是太少了&lt;/</summary>
      
    
    
    
    <category term="每日一水" scheme="https://graham-ella.github.io/categories/%E6%AF%8F%E6%97%A5%E4%B8%80%E6%B0%B4/"/>
    
    
    <category term="日记" scheme="https://graham-ella.github.io/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>butterfly主题配置</title>
    <link href="https://graham-ella.github.io/2022/05/07/butterfly%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/butterfly%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/"/>
    <id>https://graham-ella.github.io/2022/05/07/butterfly%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/butterfly%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/</id>
    <published>2022-05-07T08:00:00.000Z</published>
    <updated>2022-05-07T10:07:51.460Z</updated>
    
    <content type="html"><![CDATA[<p>为了方便运行代码查看实际效果，我们可以对package.json文件进行小修改<br>package.json里的scripts的每个属性就对应一个脚本<br>npm run xxx(属性名) 就是在执行对应的脚本</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo generate&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;clean&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo clean&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;deploy&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo deploy&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;server&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo clean &amp;&amp; hexo generate &amp;&amp; hexo server&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><p>在根目录下的_config.yml文件修改菜单(menu)</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="string">主页:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">Archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="string">标签:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">Categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-folder-open</span></span><br><span class="line">  <span class="string">List||fas</span> <span class="attr">fa-list:</span></span><br><span class="line">    <span class="attr">Music:</span> <span class="string">/music/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-music</span></span><br><span class="line">    <span class="attr">Movie:</span> <span class="string">/movies/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-video</span></span><br><span class="line">  <span class="string">链接:</span> <span class="string">/link/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-link</span></span><br><span class="line">  <span class="string">关于:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-heart</span></span><br></pre></td></tr></table></figure><p>代码高亮的主题</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">highlight_theme:</span> <span class="string">mac</span> <span class="string">light</span> <span class="comment"># 代码的主题</span></span><br><span class="line"><span class="attr">highlight_copy:</span> <span class="literal">true</span> <span class="comment"># 代码是否可以拷贝</span></span><br><span class="line"><span class="attr">highlight_lang:</span> <span class="literal">true</span> <span class="comment"># 展示代码的语言</span></span><br><span class="line"><span class="attr">highlight_shrink:</span> <span class="literal">false</span> <span class="comment"># 代码展开和折叠 貌似现在默认可以有按钮</span></span><br><span class="line"><span class="attr">highlight_height_limit:</span> <span class="literal">false</span> <span class="comment"># 代码显示高度</span></span><br><span class="line"><span class="attr">code_word_wrap:</span> <span class="literal">false</span> <span class="comment">#代码的横向滚动条</span></span><br></pre></td></tr></table></figure><p>social里可以配置图标和链接</p><p>啊这）接下来貌似是要给文章加图片了 突然想起自己没有图床<br>赶紧选择picgo + github搞一波(为什么选这样？因为<b>白嫖</b>香啊)</p><p>github搜索picgo 进入里面的release 选择最新版本<br><a><a href="https://github.com/Molunerfinn/PicGo/releases/tag/v2.3.0">https://github.com/Molunerfinn/PicGo/releases/tag/v2.3.0</a></a><br>我是windows系统，所以直接下载exe后缀的<br>下载后直接安装即可</p><p>运行后在PicGo设置里勾选GitHub图床，我这里默认勾选了）</p><p>然后就是该去github建个仓库存放图片资源了</p><p>一下子就搭建完毕了）从现在可以开始弄图片了</p>]]></content>
    
    
    <summary type="html">butterfly主题 简单配置过程</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>评论系统搭建</title>
    <link href="https://graham-ella.github.io/2022/05/07/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/"/>
    <id>https://graham-ella.github.io/2022/05/07/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/</id>
    <published>2022-05-07T08:00:00.000Z</published>
    <updated>2022-05-09T09:40:31.693Z</updated>
    
    <content type="html"><![CDATA[<p>有个图床真的舒服，随时随地爽</p><p>看了看别人的博客，感觉Twikoo和Valine都挺好看的 打算干脆直接搞个双评论系统)</p><h2>先配置下Valine吧</h2>首先打开LeanCloud官网 <a>https://console.leancloud.app/#/app</a> 选择国际版<p>注册后完善下信息 选择创建应用<br><img src="https://cdn.jsdelivr.net/gh/Graham-ella/picgo/img/20220507210426.png"></p><p>打开创建的应用 进行一些简单的配置</p><p>在设置的应用凭证里获取AppID Appkey等信息，写到_config.yml文件里<br><img src="https://cdn.jsdelivr.net/gh/Graham-ella/picgo/img/20220507211945.png"></p><p>重新启动，发现评论区有了</p><p>测试一下Toc功能</p><h2 id="hello"><a href="#hello" class="headerlink" title="hello"></a>hello</h2><p>sd</p><h3 id="heooo"><a href="#heooo" class="headerlink" title="heooo"></a>heooo</h3>]]></content>
    
    
    <summary type="html">评论系统搭建过程</summary>
    
    
    
    
  </entry>
  
</feed>
